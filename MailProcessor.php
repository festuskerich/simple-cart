<?php
require_once "lib/class.phpmailer.php";
require_once "lib/Config.php";

class MailProcessor
{

    public function process()
    {
        $raw_data = file_get_contents("php://input");
        $decoded_array = json_decode($raw_data, true);
        $this->flog(Config::INFO, "0 results: ".json_encode($decoded_array));

        $message = null;
        $message .= '<h3>Dear Team,</h3>';
        $message .= '<h4>Please check below Prime Float Balance</h4>';
        $message .= '<table style="border-collapse: collapse;">
          <thead>
            <tr style="background-color: #1E90FF">
             <th style="color: #fff; border: 1px solid black; padding: 8px;">Product Name</th>
              <th style="color: #fff; border: 1px solid black; padding: 8px;">Price</th>
              <th style="color: #fff; border: 1px solid black; padding: 8px;">Phone</th>
              <th style="color: #fff; border: 1px solid black; padding: 8px;">Email</th>
              <th style="color: #fff; border: 1px solid black; padding: 8px;">Quantity</th>
            </tr>
          </thead>
          <tbody>';
        foreach ($decoded_array['cart'] as $item) {
            $message .= "<tr>";
            $message .= "<td style='border: 1px solid black; padding: 8px;'>" . $item['product']['name'] . "</td>";
            $message .= "<td style='border: 1px solid black; padding: 8px;'>" . $item['product']['price'] . "</td>";
            $message .= "<td style='border: 1px solid black; padding: 8px;'>" . $decoded_array['cart'] . "</td>";
            $message .= "<td style='border: 1px solid black; padding: 8px;'>" . $decoded_array['cart'] . "</td>";
            $message .= "<td style='border: 1px solid black; padding: 8px;'>" . $item['quantity'] . "</td>";
            $message .= "</tr> </tbody> </table>";
        }

        $message .= "</tbody> </table>";
        $message .= "
        <h4>Payouts Team,<br>Cellulant LTD</br></h4>
        <div style='width: 812px;
        border-bottom: 1px solid #b1d0ee; margin-top: 10px; '></div>
        </div>
        <h4 style='font-family: Arial, Helvetica, sans-serif;'>This email is CONFIDENTIAL and was auto-generated by application, do not reply</h4>
        <div style='width: 812px;
        border-bottom: 1px solid #dae7f5; margin-top: 20px; '></div>
        </div>
        <div style='width: 812px;
        border-bottom: 1px solid #dae7f5; margin-top: 1px; '></div>
        </div>";
        $this->sendEmail($message);
    }

    public function sendEmail($message)
    {
        $mail = new PHPMailer();
        $mail->IsSMTP(); // send via SMTP
        $mail->Host = "ssl://smtp.gmail.com";
        $mail->Port = 465;
        $mail->SMTPAuth = true; // turn on SMTP authentication
        $mail->Username = Config::MAIL_USERNAME; // SMTP username
        $mail->Password = Config::MAIL_PASSWORD; // SMTP password
        $mail->From = Config::MAIL_SENDER;
        $mail->FromName = "Prime Float Balance Cron ";

        foreach (Config::RECIPIENTS as $email => $name) {
            $mail->addAddress($email, $name); //Receiver Email
        }

        $mail->WordWrap = 50;
        $mail->IsHTML(true); // send as HTML
        $mail->Subject = "New Client";
        $mail->Body = $message; //HTML Body

        if (!$mail->Send()) {
            $this->redirect('payment.html');
            echo "Failed to send data to . Mailer Error: ";
        } else {
            $this->redirect('payment.html');
            echo "Email has been sent successfully";
        }
    }
    /**
     * The fuction redirect a page to another page.
     * @param url
     * @return page
     */
    function redirect($url)
    {
        header('Location: ' . $url);
        die();
    }
    /* function flog
     * write data to a log file
     * @param $file
     * @param $string
     * */
    public function flog($file, $string)
    {
        $date = date("Y-m-d H:i:s");
        $fo = fopen($file, 'ab');
        fwrite($fo, $date . " | " . $_SERVER['PHP_SELF'] . " | " . str_replace("\n", " ", $string) . "\n");
        fclose($fo);
    }
}

$process = new MailProcessor();
$process->process();
